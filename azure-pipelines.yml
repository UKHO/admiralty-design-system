resources:
  containers:
    - container: node
      image: node:10

jobs:
- job: build
  container: node
  steps:
    - checkout: self
      clean: true
    - script: yarn config set unsafe-perm true
    - script: yarn install
    - script: yarn run lerna bootstrap
    - publish: projects/styles
      artifact: styles_artefact
    - publish: projects/components/dist
      artifact: components_artefact
    - publish: projects/site/dist
      artifact: site_artefact
- job: publish
  dependsOn: build
  container: node
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
    - checkout: none
    - download: current
      artifact: styles_artefact
    - download: current
      artifact: components_artefact
    - script: echo "//registry.npmjs.org/:_authToken=$(NPM_TOKEN)" > ~/.npmrc
    - script: |
         LOCAL_VERSION=$(npm version | grep -oP "(@ukho/styles':)(.*)(\'{1})(.+)('{1})" | awk -F: '{ print $2}' | awk -F"'" '{print $2}')
         NPM_VERSION=$(npm view @ukho/styles version)
         if [ "$NPM_VERSION" == "$LOCAL_VERSION" ]; then
           echo "Nothing to do, version already in NPM"
         else
           npm publish $(Pipeline.Workspace)/styles_artefact --access=public
         fi
    - script: |
        LOCAL_VERSION=$(npm version | grep -oP "(@ukho/components':)(.*)(\'{1})(.+)('{1})" | awk -F: '{ print $2}' | awk -F"'" '{print $2}')
        NPM_VERSION=$(npm view @ukho/components version)
        if [ "$NPM_VERSION" == "$LOCAL_VERSION" ]; then
          echo "Nothing to do, version already in NPM"
        else
          npm publish $(Pipeline.Workspace)/components_artefact --access=public
        fi
- job: ghpages
  dependsOn: build
  container: node
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  steps:
    - checkout: none
    - download: current
      artifact: site_artefact
    - task: InstallSSHKey@0
      inputs:
        hostName: $(knownHosts)
        sshPublicKey: $(publicKey)
        sshKeySecureFile: id_github
    - script: |
        cd $(Pipeline.Workspace)
        touch site_artefact/.nojekyll
        echo "design.ukho.dev" > site_artefact/CNAME
        npm install --save-dev gh-pages@2.0.1
        git config user.email "pipeline@ukho.gov.uk"
        git config user.name "Azure Pipeline"
        $(npm bin)/gh-pages --dotfiles --message "[skip ci] gh-pages update" --dist site_artefact -r git@github.com:UKHO/design-system.git
