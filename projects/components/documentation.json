{
    "pipes": [],
    "interfaces": [
        {
            "name": "MenuItem",
            "id": "interface-MenuItem-7120cd954fa2a3097091c93e124dc917",
            "file": "src/lib/navtypes.ts",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\r\n  title: string;\r\n  href?: string;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface SubSection extends MenuItem {\r\n  items: MenuItem[];\r\n}\r\n\r\nexport interface Section extends MenuItem {\r\n  subSections: SubSection[];\r\n}\r\n\r\nexport interface Navigation {\r\n  heading: string;\r\n  sections: Section[];\r\n}\r\n",
            "properties": [
                {
                    "name": "active",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "href",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Navigation",
            "id": "interface-Navigation-7120cd954fa2a3097091c93e124dc917",
            "file": "src/lib/navtypes.ts",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\r\n  title: string;\r\n  href?: string;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface SubSection extends MenuItem {\r\n  items: MenuItem[];\r\n}\r\n\r\nexport interface Section extends MenuItem {\r\n  subSections: SubSection[];\r\n}\r\n\r\nexport interface Navigation {\r\n  heading: string;\r\n  sections: Section[];\r\n}\r\n",
            "properties": [
                {
                    "name": "heading",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sections",
                    "type": "Section[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Section",
            "id": "interface-Section-7120cd954fa2a3097091c93e124dc917",
            "file": "src/lib/navtypes.ts",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\r\n  title: string;\r\n  href?: string;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface SubSection extends MenuItem {\r\n  items: MenuItem[];\r\n}\r\n\r\nexport interface Section extends MenuItem {\r\n  subSections: SubSection[];\r\n}\r\n\r\nexport interface Navigation {\r\n  heading: string;\r\n  sections: Section[];\r\n}\r\n",
            "properties": [
                {
                    "name": "subSections",
                    "type": "SubSection[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "extends": "MenuItem"
        },
        {
            "name": "SortState",
            "id": "interface-SortState-c49163993372e1d06dacdbcd5e59482c",
            "file": "src/lib/table/sort.directive.ts",
            "type": "interface",
            "sourceCode": "import { Directive, EventEmitter, Output } from '@angular/core';\r\nimport { UkhoSortHeader } from './sort-header.directive';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\n\r\nexport interface SortState {\r\n  column: string;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: '[ukho-sort]',\r\n})\r\nexport class UkhoSort {\r\n  @Output() readonly sortChange = new EventEmitter<SortState>();\r\n\r\n  private headers = new Map<string, UkhoSortHeader>();\r\n\r\n  public register(sortHeader: UkhoSortHeader) {\r\n    this.headers.set(sortHeader.columnDef.name, sortHeader);\r\n  }\r\n\r\n  public deregister(sortHeader: UkhoSortHeader) {\r\n    this.headers.delete(sortHeader.columnDef.name);\r\n  }\r\n\r\n  public onSort(state: { column: string; direction: 'asc' | 'desc' | '' }) {\r\n    this.headers.forEach(header => (header.columnDef.name !== state.column ? header.reset() : ''));\r\n    this.sortChange.emit(state);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "column",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "direction",
                    "type": "SortDirection",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "SubSection",
            "id": "interface-SubSection-7120cd954fa2a3097091c93e124dc917",
            "file": "src/lib/navtypes.ts",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\r\n  title: string;\r\n  href?: string;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface SubSection extends MenuItem {\r\n  items: MenuItem[];\r\n}\r\n\r\nexport interface Section extends MenuItem {\r\n  subSections: SubSection[];\r\n}\r\n\r\nexport interface Navigation {\r\n  heading: string;\r\n  sections: Section[];\r\n}\r\n",
            "properties": [
                {
                    "name": "items",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "extends": "MenuItem"
        }
    ],
    "injectables": [],
    "classes": [
        {
            "name": "UkhoAbstractFormField",
            "id": "class-UkhoAbstractFormField-d6df9bdd966fd0876958495e5efa5724",
            "file": "src/lib/form-field/form-field.ts",
            "type": "class",
            "sourceCode": "import { Input, Optional, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\nlet nextId = 0;\r\n\r\nexport abstract class UkhoAbstractFormField implements ControlValueAccessor {\r\n  /**\r\n   * AUTOGENERATED\r\n   * This is an auto-generated form-field ID\r\n   */\r\n  id = `ukho-form-field-${++nextId}`;\r\n\r\n  /**\r\n   * This dictates whether the form field is disabled.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * A Record of string,string to provide custom messages to be used with Reactive Form validators\r\n   * EG: `{ required: This field is required }` will cause the `required` validator to display the message specified.\r\n   */\r\n  @Input() validationMessages: Record<string, string> = { required: 'This field is required' };\r\n\r\n  /**\r\n   * The registered callback function called when an input event occurs on the input element.\r\n   */\r\n  public onChange = (value: unknown) => {};\r\n\r\n  /**\r\n   * The registered callback function called when a blur event occurs on the input element.\r\n   */\r\n  public onTouch = () => {};\r\n\r\n  constructor(@Optional() @Self() protected readonly controlDirective?: NgControl) {\r\n    if (controlDirective) {\r\n      controlDirective.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  get valid() {\r\n    return this.controlDirective && this.controlDirective.control.valid;\r\n  }\r\n\r\n  get touched() {\r\n    return this.controlDirective && this.controlDirective.control.touched;\r\n  }\r\n\r\n  get error() {\r\n    if (!(this.controlDirective && this.controlDirective.errors)) {\r\n      return null;\r\n    }\r\n\r\n    const errorKeys = Object.keys(this.controlDirective.errors);\r\n    const activeErrors = errorKeys.filter(errorKey => !!this.controlDirective.errors[errorKey]);\r\n    return activeErrors[0];\r\n  }\r\n  /**\r\n   * Registers a function called when the control value changes.\r\n   * Used by ReactiveForms to check for changes\r\n   */\r\n  registerOnChange(fn: (value: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a function called when the control is touched.\r\n   * Used by ReactiveForms to check for touched-ness\r\n   */\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets the \"disabled\" property on the input element.\r\n   * Used by ReactiveForms for setting the disablement of the element.\r\n   */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  /**\r\n   * Sets the \"value\" property on the input element.\r\n   * Used by ReactiveForms for setting the element value.\r\n   */\r\n  writeValue(value: unknown): void {\r\n    this.onChange(value);\r\n\r\n    if (this.controlDirective && this.controlDirective.control) {\r\n      this.controlDirective.control.updateValueAndValidity();\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "controlDirective",
                        "type": "NgControl",
                        "optional": true
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "controlDirective",
                        "type": "NgControl",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "defaultValue": "`ukho-form-field-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 11
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when a blur event occurs on the input element.</p>\n",
                    "line": 32,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "valid": {
                    "name": "valid",
                    "getSignature": {
                        "name": "valid",
                        "type": "",
                        "returnType": "",
                        "line": 40
                    }
                },
                "touched": {
                    "name": "touched",
                    "getSignature": {
                        "name": "touched",
                        "type": "",
                        "returnType": "",
                        "line": 44
                    }
                },
                "error": {
                    "name": "error",
                    "getSignature": {
                        "name": "error",
                        "type": "",
                        "returnType": "",
                        "line": 48
                    }
                }
            },
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the form field is disabled.</p>\n",
                    "line": 16
                },
                {
                    "name": "validationMessages",
                    "defaultValue": "{ required: 'This field is required' }",
                    "description": "<p>A Record of string,string to provide custom messages to be used with Reactive Form validators\nEG: <code>{ required: This field is required }</code> will cause the <code>required</code> validator to display the message specified.</p>\n",
                    "line": 22,
                    "type": "Record<string | string>"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ControlValueAccessor"
            ]
        }
    ],
    "directives": [
        {
            "name": "UkhoCell",
            "id": "directive-UkhoCell-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "ukho-cell, td[ukho-cell]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoCellDef",
            "id": "directive-UkhoCellDef-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "[ukhoCellDef]",
            "providers": [
                {
                    "name": "{ provide: CdkCellDef, useExisting: UkhoCellDef }"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoColumnDef",
            "id": "directive-UkhoColumnDef-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "[ukhoColumnDef]",
            "providers": [
                {
                    "name": "{ provide: CdkColumnDef, useExisting: UkhoColumnDef }"
                }
            ],
            "inputsClass": [
                {
                    "name": "ukhoColumnDef",
                    "line": 35,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoFooterCell",
            "id": "directive-UkhoFooterCell-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "ukho-footer-cell, td[ukho-footer-cell]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoFooterCellDef",
            "id": "directive-UkhoFooterCellDef-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "[ukhoFooterCellDef]",
            "providers": [
                {
                    "name": "{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoFooterRowDef",
            "id": "directive-UkhoFooterRowDef-d9c35fa2613c6e228caa903ef58cc969",
            "file": "src/lib/table/row.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkFooterRow,\r\n  CdkFooterRowDef,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\nimport { ChangeDetectionStrategy, Component, Directive, ViewEncapsulation } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderRowDef]',\r\n  providers: [{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }],\r\n  inputs: ['columns: ukhoHeaderRowDef', 'sticky: ukhoHeaderRowDefSticky'],\r\n})\r\nexport class UkhoHeaderRowDef extends CdkHeaderRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterRowDef]',\r\n  providers: [{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }],\r\n  inputs: ['columns: ukhoFooterRowDef', 'sticky: ukhoFooterRowDefSticky'],\r\n})\r\nexport class UkhoFooterRowDef extends CdkFooterRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoRowDef]',\r\n  providers: [{ provide: CdkRowDef, useExisting: UkhoRowDef }],\r\n  inputs: ['columns: ukhoRowDefColumns', 'when: ukhoRowDefWhen'],\r\n})\r\nexport class UkhoRowDef<T> extends CdkRowDef<T> {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-header-row, tr[ukho-header-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-header-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  providers: [{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }],\r\n})\r\nexport class UkhoHeaderRow extends CdkHeaderRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-footer-row, tr[ukho-footer-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-footer-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matFooterRow',\r\n  providers: [{ provide: CdkFooterRow, useExisting: UkhoFooterRow }],\r\n})\r\nexport class UkhoFooterRow extends CdkFooterRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-row, tr[ukho-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  providers: [{ provide: CdkRow, useExisting: UkhoRow }],\r\n})\r\nexport class UkhoRow extends CdkRow {}\r\n",
            "selector": "[ukhoFooterRowDef]",
            "providers": [
                {
                    "name": "{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoHeaderCell",
            "id": "directive-UkhoHeaderCell-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "ukho-header-cell, th[ukho-header-cell]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoHeaderCellDef",
            "id": "directive-UkhoHeaderCellDef-dddcdaa517c2d11b151a75a6dc067106",
            "file": "src/lib/table/cell.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport {\r\n  CdkCell,\r\n  CdkCellDef,\r\n  CdkColumnDef,\r\n  CdkFooterCell,\r\n  CdkFooterCellDef,\r\n  CdkHeaderCell,\r\n  CdkHeaderCellDef,\r\n} from '@angular/cdk/table';\r\n\r\n@Directive({\r\n  selector: '[ukhoCellDef]',\r\n  providers: [{ provide: CdkCellDef, useExisting: UkhoCellDef }],\r\n})\r\nexport class UkhoCellDef extends CdkCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderCellDef]',\r\n  providers: [{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }],\r\n})\r\nexport class UkhoHeaderCellDef extends CdkHeaderCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterCellDef]',\r\n  providers: [{ provide: CdkFooterCellDef, useExisting: UkhoFooterCellDef }],\r\n})\r\nexport class UkhoFooterCellDef extends CdkFooterCellDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoColumnDef]',\r\n  providers: [{ provide: CdkColumnDef, useExisting: UkhoColumnDef }],\r\n})\r\nexport class UkhoColumnDef extends CdkColumnDef {\r\n  @Input('ukhoColumnDef') name: string;\r\n}\r\n\r\n@Directive({\r\n  selector: 'ukho-header-cell, th[ukho-header-cell]',\r\n  host: {\r\n    class: 'ukho-header-cell',\r\n    role: 'columnheader',\r\n  },\r\n})\r\nexport class UkhoHeaderCell extends CdkHeaderCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-footer-cell, td[ukho-footer-cell]',\r\n  host: {\r\n    class: 'ukho-footer-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoFooterCell extends CdkFooterCell {}\r\n\r\n@Directive({\r\n  selector: 'ukho-cell, td[ukho-cell]',\r\n  host: {\r\n    class: 'ukho-cell',\r\n    role: 'gridcell',\r\n  },\r\n})\r\nexport class UkhoCell extends CdkCell {}\r\n",
            "selector": "[ukhoHeaderCellDef]",
            "providers": [
                {
                    "name": "{ provide: CdkHeaderCellDef, useExisting: UkhoHeaderCellDef }"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoHeaderRowDef",
            "id": "directive-UkhoHeaderRowDef-d9c35fa2613c6e228caa903ef58cc969",
            "file": "src/lib/table/row.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkFooterRow,\r\n  CdkFooterRowDef,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\nimport { ChangeDetectionStrategy, Component, Directive, ViewEncapsulation } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderRowDef]',\r\n  providers: [{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }],\r\n  inputs: ['columns: ukhoHeaderRowDef', 'sticky: ukhoHeaderRowDefSticky'],\r\n})\r\nexport class UkhoHeaderRowDef extends CdkHeaderRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterRowDef]',\r\n  providers: [{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }],\r\n  inputs: ['columns: ukhoFooterRowDef', 'sticky: ukhoFooterRowDefSticky'],\r\n})\r\nexport class UkhoFooterRowDef extends CdkFooterRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoRowDef]',\r\n  providers: [{ provide: CdkRowDef, useExisting: UkhoRowDef }],\r\n  inputs: ['columns: ukhoRowDefColumns', 'when: ukhoRowDefWhen'],\r\n})\r\nexport class UkhoRowDef<T> extends CdkRowDef<T> {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-header-row, tr[ukho-header-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-header-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  providers: [{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }],\r\n})\r\nexport class UkhoHeaderRow extends CdkHeaderRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-footer-row, tr[ukho-footer-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-footer-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matFooterRow',\r\n  providers: [{ provide: CdkFooterRow, useExisting: UkhoFooterRow }],\r\n})\r\nexport class UkhoFooterRow extends CdkFooterRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-row, tr[ukho-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  providers: [{ provide: CdkRow, useExisting: UkhoRow }],\r\n})\r\nexport class UkhoRow extends CdkRow {}\r\n",
            "selector": "[ukhoHeaderRowDef]",
            "providers": [
                {
                    "name": "{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoRowDef",
            "id": "directive-UkhoRowDef-d9c35fa2613c6e228caa903ef58cc969",
            "file": "src/lib/table/row.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkFooterRow,\r\n  CdkFooterRowDef,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\nimport { ChangeDetectionStrategy, Component, Directive, ViewEncapsulation } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderRowDef]',\r\n  providers: [{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }],\r\n  inputs: ['columns: ukhoHeaderRowDef', 'sticky: ukhoHeaderRowDefSticky'],\r\n})\r\nexport class UkhoHeaderRowDef extends CdkHeaderRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterRowDef]',\r\n  providers: [{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }],\r\n  inputs: ['columns: ukhoFooterRowDef', 'sticky: ukhoFooterRowDefSticky'],\r\n})\r\nexport class UkhoFooterRowDef extends CdkFooterRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoRowDef]',\r\n  providers: [{ provide: CdkRowDef, useExisting: UkhoRowDef }],\r\n  inputs: ['columns: ukhoRowDefColumns', 'when: ukhoRowDefWhen'],\r\n})\r\nexport class UkhoRowDef<T> extends CdkRowDef<T> {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-header-row, tr[ukho-header-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-header-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  providers: [{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }],\r\n})\r\nexport class UkhoHeaderRow extends CdkHeaderRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-footer-row, tr[ukho-footer-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-footer-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matFooterRow',\r\n  providers: [{ provide: CdkFooterRow, useExisting: UkhoFooterRow }],\r\n})\r\nexport class UkhoFooterRow extends CdkFooterRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-row, tr[ukho-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  providers: [{ provide: CdkRow, useExisting: UkhoRow }],\r\n})\r\nexport class UkhoRow extends CdkRow {}\r\n",
            "selector": "[ukhoRowDef]",
            "providers": [
                {
                    "name": "{ provide: CdkRowDef, useExisting: UkhoRowDef }"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UkhoSort",
            "id": "directive-UkhoSort-c49163993372e1d06dacdbcd5e59482c",
            "file": "src/lib/table/sort.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, EventEmitter, Output } from '@angular/core';\r\nimport { UkhoSortHeader } from './sort-header.directive';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\n\r\nexport interface SortState {\r\n  column: string;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: '[ukho-sort]',\r\n})\r\nexport class UkhoSort {\r\n  @Output() readonly sortChange = new EventEmitter<SortState>();\r\n\r\n  private headers = new Map<string, UkhoSortHeader>();\r\n\r\n  public register(sortHeader: UkhoSortHeader) {\r\n    this.headers.set(sortHeader.columnDef.name, sortHeader);\r\n  }\r\n\r\n  public deregister(sortHeader: UkhoSortHeader) {\r\n    this.headers.delete(sortHeader.columnDef.name);\r\n  }\r\n\r\n  public onSort(state: { column: string; direction: 'asc' | 'desc' | '' }) {\r\n    this.headers.forEach(header => (header.columnDef.name !== state.column ? header.reset() : ''));\r\n    this.sortChange.emit(state);\r\n  }\r\n}\r\n",
            "selector": "[ukho-sort]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "sortChange",
                    "defaultValue": "new EventEmitter<SortState>()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "headers",
                    "defaultValue": "new Map<string, UkhoSortHeader>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deregister",
                    "args": [
                        {
                            "name": "sortHeader",
                            "type": "UkhoSortHeader"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "sortHeader",
                            "type": "UkhoSortHeader",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "state",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "sortHeader",
                            "type": "UkhoSortHeader"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "sortHeader",
                            "type": "UkhoSortHeader",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "UkhoSortHeader",
            "id": "directive-UkhoSortHeader-48b5082301bb9fa8096d5a9b865f83aa",
            "file": "src/lib/table/sort-header.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, HostBinding, HostListener, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { SortDirection, UkhoSort } from './sort.directive';\r\nimport { UkhoColumnDef } from './cell.directive';\r\n\r\n@Directive({\r\n  selector: '[ukho-sort-header]',\r\n})\r\nexport class UkhoSortHeader implements OnInit, OnDestroy {\r\n  constructor(@Optional() public sortDir: UkhoSort, @Optional() public columnDef: UkhoColumnDef) {}\r\n\r\n  private readonly directions: SortDirection[] = ['asc', 'desc', ''];\r\n  private direction: SortDirection = '';\r\n\r\n  @HostBinding('style.cursor') styleCursor = 'pointer';\r\n  @HostBinding('class.asc') get classAsc() {\r\n    return this.direction === 'asc';\r\n  }\r\n  @HostBinding('class.desc') get classDesc() {\r\n    return this.direction === 'desc';\r\n  }\r\n\r\n  @HostListener('click') click() {\r\n    const nextDirection = this.directions[this.directions.indexOf(this.direction) + 1];\r\n    this.direction = nextDirection || nextDirection === '' ? nextDirection : this.directions[0];\r\n    this.sortDir.onSort({ column: this.columnDef.name, direction: this.direction });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sortDir.deregister(this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sortDir.register(this);\r\n  }\r\n\r\n  reset() {\r\n    this.direction = '';\r\n  }\r\n}\r\n",
            "selector": "[ukho-sort-header]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [
                {
                    "name": "class.asc",
                    "line": 15
                },
                {
                    "name": "class.desc",
                    "line": 18
                },
                {
                    "name": "style.cursor",
                    "defaultValue": "'pointer'",
                    "line": 14
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "line": 22
                }
            ],
            "propertiesClass": [
                {
                    "name": "columnDef",
                    "type": "UkhoColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "direction",
                    "defaultValue": "''",
                    "type": "SortDirection",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "directions",
                    "defaultValue": "['asc', 'desc', '']",
                    "type": "SortDirection[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "sortDir",
                    "type": "UkhoSort",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sortDir",
                        "type": "UkhoSort"
                    },
                    {
                        "name": "columnDef",
                        "type": "UkhoColumnDef"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "sortDir",
                        "type": "UkhoSort",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "columnDef",
                        "type": "UkhoColumnDef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "BreadcrumbsComponent",
            "id": "component-BreadcrumbsComponent-08b11b5c577574c6dc64f7db4c599580",
            "file": "src/lib/breadcrumbs/breadcrumbs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-breadcrumbs",
            "styleUrls": [
                "./breadcrumbs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "description": "<p>This takes an array of items to display in the breadcrumb.\nMenuItem: {\n   title: string;\n   href?: string;\n   active?: boolean;\n}</p>\n",
                    "line": 18,
                    "type": "MenuItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MenuItem } from '../navtypes';\r\n\r\n@Component({\r\n  selector: 'ukho-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styleUrls: ['./breadcrumbs.component.scss'],\r\n})\r\nexport class BreadcrumbsComponent {\r\n  /**\r\n   * This takes an array of items to display in the breadcrumb.\r\n   * MenuItem: {\r\n   *   title: string;\r\n   *   href?: string;\r\n   *   active?: boolean;\r\n   * }\r\n   */\r\n  @Input() items: MenuItem[];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/breadcrumbs';\r\n",
                    "styleUrl": "./breadcrumbs.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"breadcrumbs\">\r\n  <li *ngFor=\"let item of items\">\r\n    <a [href]=\"item.href || '#'\">{{ item.title }}</a>\r\n  </li>\r\n</ul>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-40ce202425d8009de0b824316774aa0a",
            "file": "src/lib/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[ukho-button]",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "description": "<p>This is the icon to be used on the button\nThis must be one of the font-awesome icons\nE.G: fa-chevron-down</p>\n",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "secondary",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the button is secondary.</p>\n",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'button[ukho-button]',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * This dictates whether the button is secondary.\r\n   */\r\n  @HostBinding('class.secondary') @Input() secondary = false;\r\n\r\n  /**\r\n   * This is the icon to be used on the button\r\n   * This must be one of the font-awesome icons\r\n   * E.G: fa-chevron-down\r\n   */\r\n  @HostBinding('class.icon') @Input() icon: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/buttons';\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\r\n<i *ngIf=\"icon\" class=\"fa {{ icon }}\"></i>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-d2b32337b8e68b059a2901cc631d0c83",
            "file": "src/lib/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ukho-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent {\r\n  @Input() public title: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/cards';\r\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"card\">\r\n  <h6 *ngIf=\"title\">{{ title }}</h6>\r\n  <div>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-e1c87cb824d2510b43830342c64d8a80",
            "file": "src/lib/checkbox/checkbox.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checkboxRight",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "description": "<p>Whether the checkbox is checked or not by default.</p>\n",
                    "line": 17
                },
                {
                    "name": "value",
                    "description": "<p>This is the value which the checkbox emits when selected..</p>\n",
                    "line": 22,
                    "type": "unknown"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the form field is disabled.</p>\n",
                    "line": 16,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "validationMessages",
                    "defaultValue": "{ required: 'This field is required' }",
                    "description": "<p>A Record of string,string to provide custom messages to be used with Reactive Form validators\nEG: <code>{ required: This field is required }</code> will cause the <code>required</code> validator to display the message specified.</p>\n",
                    "line": 22,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "id",
                    "defaultValue": "`ukho-form-field-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 11,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when a blur event occurs on the input element.</p>\n",
                    "line": 32,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { UkhoAbstractFormField } from '../form-field/form-field';\r\n\r\n@Component({\r\n  selector: 'ukho-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  host: {\r\n    class: 'checkbox-wrapper',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CheckboxComponent extends UkhoAbstractFormField {\r\n  /**\r\n   * Whether the checkbox is checked or not by default.\r\n   */\r\n  @Input() checked = false;\r\n\r\n  /**\r\n   * This is the value which the checkbox emits when selected..\r\n   */\r\n  @Input() value: unknown;\r\n\r\n  @Input() checkboxRight: boolean;\r\n\r\n  onChange = (checked: boolean) => {};\r\n\r\n  handleChange(checked: boolean) {\r\n    this.checked = checked;\r\n    this.onChange(checked);\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.checked = !!value;\r\n\r\n    super.writeValue(value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/checkbox';\r\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "UkhoAbstractFormField",
            "templateData": "<input\r\n  type=\"checkbox\"\r\n  [value]=\"value\"\r\n  [id]=\"id\"\r\n  [checked]=\"checked\"\r\n  (change)=\"handleChange($event.target.checked)\"\r\n  (blur)=\"onTouch()\"\r\n/>\r\n\r\n<label [ngClass]=\"{ checkboxRight: checkboxRight }\" [for]=\"id\">\r\n  <ng-content></ng-content>\r\n</label>\r\n"
        },
        {
            "name": "DialogueComponent",
            "id": "component-DialogueComponent-5d2f30955bbbe14227610b0ce2dec95b",
            "file": "src/lib/dialogue/dialogue.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-dialogue",
            "styleUrls": [
                "./dialogue.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialogue.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'info'",
                    "line": 10,
                    "type": "\"info\" | \"warning\" | \"success\" | \"error\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ukho-dialogue',\r\n  templateUrl: './dialogue.component.html',\r\n  styleUrls: ['./dialogue.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogueComponent {\r\n  @Input() type: 'info' | 'warning' | 'success' | 'error' = 'info';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/dialogue';\r\n",
                    "styleUrl": "./dialogue.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"dialog {{ type }}\">\r\n  <ng-content select=\"h3\"></ng-content>\r\n  <ng-content select=\"div\"></ng-content>\r\n</section>\r\n"
        },
        {
            "name": "ExpansionComponent",
            "id": "component-ExpansionComponent-cd6d77245f488ceae6261cbca633030a",
            "file": "src/lib/expansion/expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-expansion",
            "styleUrls": [
                "./expansion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expansion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "heading",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "initialExpanded",
                    "defaultValue": "false",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "`ukho-expansion-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ukho-expansion',\r\n  templateUrl: './expansion.component.html',\r\n  styleUrls: ['./expansion.component.scss'],\r\n})\r\nexport class ExpansionComponent {\r\n  @Input() initialExpanded = false;\r\n  @Input() heading: string;\r\n\r\n  id = `ukho-expansion-${++nextId}`;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/expansion';\r\n",
                    "styleUrl": "./expansion.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"expansion\">\r\n  <input class=\"expansion-checkbox\" id=\"{{ id }}\" type=\"checkbox\" [checked]=\"initialExpanded\" />\r\n  <label class=\"expansion-label\" for=\"{{ id }}\">{{ heading }}</label>\r\n  <div class=\"expansion-content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "FileInputComponent",
            "id": "component-FileInputComponent-5fce043a93ae5481067e9d13434469f6",
            "file": "src/lib/file-input/file-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-file-input",
            "styleUrls": [
                "./file-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./file-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Click to choose a file or drag it here'",
                    "description": "<p>The label displayed within the file input box</p>\n",
                    "line": 16
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the form field is disabled.</p>\n",
                    "line": 16,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "validationMessages",
                    "defaultValue": "{ required: 'This field is required' }",
                    "description": "<p>A Record of string,string to provide custom messages to be used with Reactive Form validators\nEG: <code>{ required: This field is required }</code> will cause the <code>required</code> validator to display the message specified.</p>\n",
                    "line": 22,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "type": "FileList",
                    "optional": false,
                    "description": "<p>INTERNAL - The list of files currently in the field</p>\n",
                    "line": 21
                },
                {
                    "name": "id",
                    "defaultValue": "`ukho-form-field-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 11,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when a blur event occurs on the input element.</p>\n",
                    "line": 32,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "fileInputChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "description": "<p>Function that gets called when the file input gets changed</p>\n",
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "hostBindings": [
                {
                    "name": "class.invalid",
                    "line": 44
                },
                {
                    "name": "class.is-dragover",
                    "defaultValue": "false",
                    "line": 23
                },
                {
                    "name": "class.validated",
                    "line": 39
                }
            ],
            "hostListeners": [
                {
                    "name": "dragend",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 60
                },
                {
                    "name": "dragstart",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 51
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 68
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, HostListener, Input } from '@angular/core';\r\nimport * as fileSizeNs from 'filesize';\r\nimport { UkhoAbstractFormField } from '../form-field/form-field';\r\n\r\nconst fileSize = fileSizeNs;\r\n\r\n@Component({\r\n  selector: 'ukho-file-input',\r\n  templateUrl: './file-input.component.html',\r\n  styleUrls: ['./file-input.component.scss'],\r\n})\r\nexport class FileInputComponent extends UkhoAbstractFormField {\r\n  /**\r\n   * The label displayed within the file input box\r\n   */\r\n  @Input() label = 'Click to choose a file or drag it here';\r\n\r\n  /**\r\n   * INTERNAL - The list of files currently in the field\r\n   */\r\n  files: FileList;\r\n\r\n  @HostBinding('class.is-dragover') isDragover = false;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public onChange: (files: FileList) => void;\r\n\r\n  get fileName() {\r\n    return this.files.item(0).name;\r\n  }\r\n\r\n  get fileSize() {\r\n    return fileSize(this.files.item(0).size);\r\n  }\r\n\r\n  @HostBinding('class.validated')\r\n  get valid() {\r\n    return this.controlDirective && this.controlDirective.control.valid && this.controlDirective.control.touched;\r\n  }\r\n\r\n  @HostBinding('class.invalid')\r\n  get invalid() {\r\n    return this.controlDirective && !this.controlDirective.control.valid && this.controlDirective.control.touched;\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  @HostListener('dragover', ['$event'])\r\n  @HostListener('dragenter', ['$event'])\r\n  start(event: DragEvent) {\r\n    this.isDragover = true;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.onTouch();\r\n  }\r\n\r\n  @HostListener('dragend', ['$event'])\r\n  @HostListener('dragleave', ['$event'])\r\n  end(event: DragEvent) {\r\n    this.isDragover = false;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.onTouch();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  drop(event: DragEvent) {\r\n    this.isDragover = false;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const files = event.dataTransfer.files;\r\n    this.files = files;\r\n    this.onTouch();\r\n    this.onChange(files);\r\n  }\r\n\r\n  /**\r\n   * Function that gets called when the file input gets changed\r\n   */\r\n  public fileInputChange(event: Event) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    this.files = files;\r\n    this.onTouch();\r\n    this.onChange(files);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  writeValue(obj: any): void {\r\n    this.files = obj;\r\n\r\n    super.writeValue(obj);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/typography';\r\n@use '~@ukho/styles/colours';\r\n@use '~@ukho/styles/fontawesome';\r\n\r\n:host {\r\n  display: flex;\r\n  border: 2px dashed colours.$colour-admiralty-blue;\r\n  min-height: 120px;\r\n  align-content: stretch;\r\n  justify-content: stretch;\r\n  background: colours.$colour-bg-grey;\r\n\r\n  &.is-dragover {\r\n    background: colours.$colour-white;\r\n  }\r\n\r\n  &.validated {\r\n    border-color: colours.$colour-utility-success;\r\n    background: colours.$colour-white;\r\n  }\r\n\r\n  &.invalid {\r\n    border-color: colours.$colour-utility-error;\r\n    background: colours.$colour-white;\r\n  }\r\n\r\n  margin-bottom: 36px;\r\n}\r\n\r\nlabel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  align-content: center;\r\n  justify-content: center;\r\n  span,\r\n  i {\r\n    color: colours.$colour-admiralty-blue;\r\n    margin: 0.4rem 0;\r\n    text-align: center;\r\n    flex: 0 1;\r\n    font-size: 18px;\r\n  }\r\n  i {\r\n    font-size: 24px;\r\n    &::before {\r\n      @extend .fa;\r\n      @extend .fa-upload, :before;\r\n    }\r\n  }\r\n  .instructions {\r\n    font-weight: 400;\r\n  }\r\n}\r\n\r\ninput {\r\n  width: 0;\r\n  height: 0;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  z-index: -1;\r\n}\r\n\r\n.error-text {\r\n  font-size: 12px;\r\n  color: colours.$colour-utility-error;\r\n  margin-left: 18px;\r\n  margin-bottom: 0;\r\n}\r\n",
                    "styleUrl": "./file-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "UkhoAbstractFormField",
            "accessors": {
                "fileName": {
                    "name": "fileName",
                    "getSignature": {
                        "name": "fileName",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                },
                "fileSize": {
                    "name": "fileSize",
                    "getSignature": {
                        "name": "fileSize",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                }
            },
            "templateData": "<label [for]=\"id\">\r\n  <i class=\"fa fa-upload\"></i>\r\n  <span class=\"instructions\" *ngIf=\"!files\">{{ label }}</span>\r\n  <span *ngIf=\"files\">{{ fileName }} ({{ fileSize }})</span>\r\n</label>\r\n<input [id]=\"id\" (change)=\"fileInputChange($event)\" type=\"file\" />\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-be0a091483256b594246bb3047697619",
            "file": "src/lib/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alt",
                    "defaultValue": "'Admiralty Maritime Data Solutions | UK Hydrographic Office'",
                    "line": 11
                },
                {
                    "name": "navigation",
                    "line": 13,
                    "type": "MenuItem[]"
                },
                {
                    "name": "src",
                    "defaultValue": "'/svg/Admiralty linear logo.svg'",
                    "line": 10
                },
                {
                    "name": "text",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MenuItem } from '../navtypes';\r\n\r\n@Component({\r\n  selector: 'ukho-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input() src = '/svg/Admiralty linear logo.svg';\r\n  @Input() alt = 'Admiralty Maritime Data Solutions | UK Hydrographic Office';\r\n  @Input() text?: string;\r\n  @Input() navigation?: MenuItem[];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/header';\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header>\r\n  <nav id=\"top-menu\">\r\n    <span>\r\n      {{ text }}\r\n      <img *ngIf=\"!text\" src=\"{{ src }}\" alt=\"{{ alt }}\" />\r\n    </span>\r\n    <div *ngIf=\"navigation\" class=\"header-links-wrap\">\r\n      <a *ngFor=\"let item of navigation\" href=\"{{ item.href }}\">{{ item.title }}</a>\r\n    </div>\r\n  </nav>\r\n</header>\r\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-a6c7112df1415e5894293a210b138e65",
            "file": "src/lib/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-navigation",
            "styleUrls": [
                "./navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navigation",
                    "line": 11,
                    "type": "Navigation"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input } from '@angular/core';\r\nimport { Navigation } from '../navtypes';\r\nimport { enhanceMainMenu } from '../nav-enhance';\r\n\r\n@Component({\r\n  selector: 'ukho-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss'],\r\n})\r\nexport class NavigationComponent implements AfterViewInit {\r\n  @Input() navigation: Navigation;\r\n\r\n  ngAfterViewInit() {\r\n    enhanceMainMenu();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navigation.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<header>\r\n  <h1>\r\n    <a href=\"/\" title=\"Home\">{{ navigation.heading }}</a>\r\n  </h1>\r\n\r\n  <nav *ngIf=\"navigation\" id=\"main-menu\">\r\n    <div>\r\n      <a href=\"#main-menu-toggle\" id=\"main-menu-close\" class=\"menu-close\" aria-label=\"Close main menu\">\r\n        <span class=\"sr-only\">Close main menu</span>\r\n        <span class=\"fa fa-times\"></span>\r\n      </a>\r\n    </div>\r\n\r\n    <ul>\r\n      <li *ngFor=\"let section of navigation.sections\" tabindex=\"0\" class=\"section{{ section.active ? ' active' : '' }}\">\r\n        <a tabindex=\"-1\" href=\"{{ section.href || '#' }}\">{{ section.title }}</a>\r\n        <section>\r\n          <section *ngFor=\"let subSection of section.subSections\" class=\"sub-section\">\r\n            <h2>\r\n              <a href=\"{{ subSection.href || '#' }}\">{{ subSection.title }}</a>\r\n            </h2>\r\n            <ul>\r\n              <li *ngFor=\"let item of subSection.items\">\r\n                <a href=\"{{ item.href || '#' }}\">{{ item.title }}</a>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </section>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <a id=\"backdrop\" href=\"#main-menu-toggle\" class=\"backdrop\" tabindex=\"-1\" aria-hidden=\"true\" hidden></a>\r\n\r\n  <div *ngIf=\"navigation\" class=\"menu-toggle-wrapper\">\r\n    <a href=\"#main-menu\" id=\"main-menu-toggle\" class=\"menu-toggle\">\r\n      <span class=\"sr-only\">Open main menu</span>\r\n      <span class=\"fa fa-bars\" aria-hidden=\"true\"></span>\r\n    </a>\r\n  </div>\r\n</header>\r\n"
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-678421a6d4c78a484bf67722f4b20c8f",
            "file": "src/lib/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-paginator",
            "styleUrls": [
                "./paginator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "pages",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 36,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_currentPage",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "_pages",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "maxLength",
                    "defaultValue": "7",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57
                },
                {
                    "name": "prev",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "range",
                    "args": [
                        {
                            "name": "start",
                            "type": ""
                        },
                        {
                            "name": "length",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "length",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ukho-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.scss'],\r\n})\r\nexport class PaginatorComponent {\r\n  @Input() set pages(pages: number) {\r\n    this.setPage(1);\r\n    this._pages = pages;\r\n  }\r\n\r\n  @Input() set currentPage(page: number) {\r\n    this.setPage(page);\r\n  }\r\n\r\n  get pageArray() {\r\n    const even = this.maxLength % 2 === 0 ? 1 : 0;\r\n    if (this._pages < this.maxLength) {\r\n      return this.range(1, this._pages);\r\n    } else if (this._currentPage <= this.maxLength / 2 + 1) {\r\n      return [...this.range(1, this.maxLength - 2), '...', this._pages];\r\n    } else if (this._pages - this._currentPage <= this.maxLength / 2 - even) {\r\n      return [1, '...', ...this.range(this._pages - (this.maxLength - 3), this.maxLength - 2)];\r\n    }\r\n    return [\r\n      1,\r\n      '...',\r\n      ...this.range(this._currentPage - Math.floor(this.maxLength / 2) + 2, this.maxLength - 4),\r\n      '...',\r\n      this._pages,\r\n    ];\r\n  }\r\n\r\n  @Output() pageChange = new EventEmitter<number>();\r\n\r\n  _pages: number;\r\n  _currentPage = 1;\r\n  readonly maxLength = 7;\r\n\r\n  public setPage(page: number) {\r\n    this._currentPage = page;\r\n    this.pageChange.emit(page);\r\n  }\r\n\r\n  range(start, length) {\r\n    return [...Array(length).keys()].map(x => x + start);\r\n  }\r\n\r\n  prev() {\r\n    if (this._currentPage > 1) {\r\n      this.setPage(this._currentPage - 1);\r\n    }\r\n  }\r\n\r\n  next() {\r\n    if (this._currentPage < this._pages) {\r\n      this.setPage(this._currentPage + 1);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/colours';\r\n\r\nul {\r\n  display: flex;\r\n  list-style: none;\r\n  li {\r\n    cursor: default;\r\n    user-select: none;\r\n    flex-basis: 48px;\r\n    a {\r\n      cursor: pointer;\r\n      min-width: 25px;\r\n      text-align: center;\r\n      display: inline-block;\r\n    }\r\n    .current {\r\n      font-weight: bold;\r\n      color: colours.$colour-admiralty-blue;\r\n      border-bottom: 3px solid;\r\n    }\r\n    &::before {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./paginator.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "pages": {
                    "name": "pages",
                    "setSignature": {
                        "name": "pages",
                        "type": "void",
                        "args": [
                            {
                                "name": "pages",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 9,
                        "jsdoctags": [
                            {
                                "name": "pages",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "currentPage": {
                    "name": "currentPage",
                    "setSignature": {
                        "name": "currentPage",
                        "type": "void",
                        "args": [
                            {
                                "name": "page",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "page",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "pageArray": {
                    "name": "pageArray",
                    "getSignature": {
                        "name": "pageArray",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                }
            },
            "templateData": "<nav>\r\n  <ul>\r\n    <li><a (click)=\"prev()\">Previous</a></li>\r\n    <li *ngFor=\"let page of pageArray\">\r\n      <a *ngIf=\"page !== '...'; else ellipsis\" (click)=\"setPage(page)\" [ngClass]=\"{ current: page === _currentPage }\">\r\n        {{ page }}\r\n      </a>\r\n      <ng-template #ellipsis>&hellip;</ng-template>\r\n    </li>\r\n    <li><a (click)=\"next()\">Next</a></li>\r\n  </ul>\r\n</nav>\r\n"
        },
        {
            "name": "PhaseBannerComponent",
            "id": "component-PhaseBannerComponent-2c563fd1ab1fd25a95dad404e0762385",
            "file": "src/lib/phase-banner/phase-banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-phase-banner",
            "styleUrls": [
                "./phase-banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./phase-banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "link",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "phase",
                    "defaultValue": "'alpha'",
                    "line": 10,
                    "type": "\"alpha\" | \"beta\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ukho-phase-banner',\r\n  templateUrl: './phase-banner.component.html',\r\n  styleUrls: ['./phase-banner.component.scss'],\r\n})\r\nexport class PhaseBannerComponent {\r\n  @Input() link: string;\r\n  @Input() phase: 'alpha' | 'beta' = 'alpha';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/colours';\r\n@use '~@ukho/styles/responsive';\r\n\r\nstrong {\r\n  border: 2px solid;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  color: colours.$colour-admiralty-blue;\r\n  padding: 6px 8px 3px;\r\n  margin-right: 10px;\r\n}\r\n\r\n:host {\r\n  display: block;\r\n  line-height: 40px;\r\n  width: 100%;\r\n  max-width: responsive.$max-content-width;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 30px 18px;\r\n  @include responsive.desktop-only {\r\n    padding: 0 20px 48px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./phase-banner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<strong>{{ phase }}</strong>\r\nThis service is in {{ phase }} phase - please provide\r\n<a [href]=\"link\" target=\"_blank\">feedback</a>\r\nto help us improve it\r\n"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-9a8ab0e918d9b20931aa287dc06640c2",
            "file": "src/lib/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ukho-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss'],\r\n})\r\nexport class ProgressBarComponent {\r\n  @Input() value = 0;\r\n  @Input() error = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/colours';\r\n\r\n:host {\r\n  display: flex;\r\n}\r\n\r\n.errorProgress {\r\n  &::-webkit-progress-value {\r\n    background-color: red;\r\n  }\r\n  &::-moz-progress-bar {\r\n    background-color: red;\r\n  }\r\n}\r\n\r\nprogress {\r\n  appearance: none;\r\n\r\n  &::-webkit-progress-bar {\r\n    border-radius: 0;\r\n  }\r\n\r\n  &::-webkit-progress-inner-element {\r\n    appearance: none;\r\n  }\r\n\r\n  border: none;\r\n  color: colours.$colour-admiralty-blue;\r\n  flex: 1;\r\n  background: colours.$colour-bg-grey;\r\n}\r\n",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<progress [ngClass]=\"{ errorProgress: error }\" [value]=\"value\" max=\"100\"></progress>\r\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-cca7d8003ffdc978976dfe8112e4d62b",
            "file": "src/lib/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-radio",
            "styleUrls": [
                "./radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "description": "<p>The checked value of the radio button</p>\n",
                    "line": 20
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>The disablement of the radio button</p>\n",
                    "line": 25
                },
                {
                    "name": "name",
                    "description": "<p>The name of the radio button</p>\n",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "value",
                    "description": "<p>The value of the radio button for use on selection within a radio group</p>\n",
                    "line": 30,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "`ukho-radio-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 36
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ukho-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.scss'],\r\n})\r\nexport class RadioComponent implements ControlValueAccessor {\r\n  /**\r\n   * The name of the radio button\r\n   */\r\n  @Input() name: string;\r\n\r\n  /**\r\n   * The checked value of the radio button\r\n   */\r\n  @Input() checked = false;\r\n\r\n  /**\r\n   * The disablement of the radio button\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * The value of the radio button for use on selection within a radio group\r\n   */\r\n  @Input() value: any;\r\n\r\n  /**\r\n   * AUTOGENERATED\r\n   * This is an auto-generated form-field ID\r\n   */\r\n  id = `ukho-radio-${++nextId}`;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onChange = (checked: boolean) => {};\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onTouch = () => {};\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  registerOnChange(fn: (checked: boolean) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  writeValue(value: any): void {\r\n    this.checked = !!value;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/radio';\r\n",
                    "styleUrl": "./radio.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<input\r\n  type=\"radio\"\r\n  [id]=\"id\"\r\n  [checked]=\"checked\"\r\n  [name]=\"name\"\r\n  [disabled]=\"disabled\"\r\n  [value]=\"value\"\r\n  (change)=\"onChange($event.target.checked)\"\r\n/>\r\n<label [for]=\"id\">\r\n  <ng-content></ng-content>\r\n</label>\r\n"
        },
        {
            "name": "RadioGroupComponent",
            "id": "component-RadioGroupComponent-630d80b4f897ebdafbdb60b8d6eff26b",
            "file": "src/lib/radio-group/radio-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-radio-group",
            "styleUrls": [
                "./radio-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "description": "<p>The name of the radio group for use within a form</p>\n",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "childRadioButtons",
                    "type": "QueryList<RadioComponent>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "RadioComponent, {descendants: true}"
                        }
                    ]
                },
                {
                    "name": "currentValue",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The currently selected child radio button value</p>\n",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 50
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "captureChildChangeEvent",
                    "args": [
                        {
                            "name": "radioButton",
                            "type": "RadioComponent"
                        },
                        {
                            "name": "selected",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "description": "<p>INTERNAL\nMethod which is called when any child radio button changes value</p>\n",
                    "jsdoctags": [
                        {
                            "name": "radioButton",
                            "type": "RadioComponent",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selected",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateChild",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "child",
                                    "type": "RadioComponent"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "description": "<p>INTERNAL\nRun a function against all child radio buttons</p>\n",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "child",
                                    "type": "RadioComponent"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  forwardRef,\r\n  Input,\r\n  Optional,\r\n  QueryList,\r\n  Self,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { RadioComponent } from '../radio/radio.component';\r\n\r\n@Component({\r\n  selector: 'ukho-radio-group',\r\n  templateUrl: './radio-group.component.html',\r\n  styleUrls: ['./radio-group.component.scss'],\r\n})\r\nexport class RadioGroupComponent implements ControlValueAccessor, AfterContentInit {\r\n  /**\r\n   * The currently selected child radio button value\r\n   */\r\n  private currentValue: any;\r\n\r\n  /**\r\n   * The name of the radio group for use within a form\r\n   */\r\n  @Input()\r\n  set name(name: string) {\r\n    this._name = name;\r\n    this.updateChild(this.updateName);\r\n  }\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  get valid() {\r\n    return this.controlDirective && this.controlDirective.control.valid;\r\n  }\r\n\r\n  get touched() {\r\n    return this.controlDirective && this.controlDirective.control.touched;\r\n  }\r\n\r\n  @ContentChildren(RadioComponent, { descendants: true }) childRadioButtons!: QueryList<RadioComponent>;\r\n\r\n  /**\r\n   * The registered callback function called when an input event occurs on the input element.\r\n   */\r\n  onChange = value => {};\r\n  /**\r\n   * The registered callback function called when an input event occurs on the input element.\r\n   */\r\n  onTouch = () => {};\r\n\r\n  constructor(@Optional() @Self() private readonly controlDirective: NgControl) {\r\n    if (controlDirective) {\r\n      controlDirective.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  ngAfterContentInit() {\r\n    this.updateChild(this.updateName);\r\n    this.updateChild(this.registerChangeCaptor);\r\n    this.writeValue(this.currentValue);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private updateName = button => (button.name = this.name);\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private updateDisability = button => (button.disabled = this._disabled);\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private registerChangeCaptor = button =>\r\n    button.registerOnChange(value => this.captureChildChangeEvent(button, value));\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private _name: string;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private _disabled: boolean;\r\n\r\n  /**\r\n   * INTERNAL\r\n   * Method which is called when any child radio button changes value\r\n   */\r\n  captureChildChangeEvent(radioButton: RadioComponent, selected: boolean) {\r\n    if (selected) {\r\n      this.writeValue(radioButton.value);\r\n      this.onChange(radioButton.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * INTERNAL\r\n   * Run a function against all child radio buttons\r\n   */\r\n  private updateChild(fn: (child: RadioComponent) => {}) {\r\n    if (this.childRadioButtons) {\r\n      this.childRadioButtons.forEach(button => fn(button));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers a function called when the control value changes.\r\n   * Used by ReactiveForms to check for changes\r\n   */\r\n  registerOnChange(fn: (value) => {}): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a function called when the control is touched.\r\n   * Used by ReactiveForms to check for touched-ness\r\n   */\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets the \"disabled\" property on the input element.\r\n   * Used by ReactiveForms for setting the disablement of the element.\r\n   */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._disabled = isDisabled;\r\n    this.updateChild(this.updateDisability);\r\n  }\r\n\r\n  /**\r\n   * Sets the \"value\" property on the input element.\r\n   * Used by ReactiveForms for setting the element value.\r\n   */\r\n  writeValue(obj: any): void {\r\n    this.currentValue = obj;\r\n    this.updateChild(child => (child.checked = child.value === obj));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./radio-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "controlDirective",
                        "type": "NgControl"
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "controlDirective",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "AfterContentInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "args": [
                            {
                                "name": "name",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "description": "<p>The name of the radio group for use within a form</p>\n",
                        "jsdoctags": [
                            {
                                "name": "name",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "name",
                        "type": "string",
                        "returnType": "string",
                        "line": 33
                    }
                },
                "valid": {
                    "name": "valid",
                    "getSignature": {
                        "name": "valid",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                },
                "touched": {
                    "name": "touched",
                    "getSignature": {
                        "name": "touched",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\r\n"
        },
        {
            "name": "ReadMoreComponent",
            "id": "component-ReadMoreComponent-ce818fc0fef2cb594faf68964de2150b",
            "file": "src/lib/readmore/readmore.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-readmore",
            "styleUrls": [
                "./readmore.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./readmore.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "heading",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "initialExpanded",
                    "defaultValue": "false",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "`ukho-readmore-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ukho-readmore',\r\n  templateUrl: './readmore.component.html',\r\n  styleUrls: ['./readmore.component.scss'],\r\n})\r\nexport class ReadMoreComponent {\r\n  @Input() initialExpanded = false;\r\n  @Input() heading: string;\r\n\r\n  id = `ukho-readmore-${++nextId}`;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./readmore.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"readmore\">\r\n  <h3>{{ heading }}</h3>\r\n  <input id=\"{{ id }}\" type=\"checkbox\" [attr.checked]=\"initialExpanded\" />\r\n  <ng-content select=\".readmore-intro\"></ng-content>\r\n  <ng-content></ng-content>\r\n  <label for=\"{{ id }}\"></label>\r\n</section>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-3a3d54ef44db5d592716d14ce09ed7ae",
            "file": "src/lib/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ukho-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent {\r\n  handleSearch() {\r\n    console.log('search button has been clicked');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ukho-textinput label=\"Search\"></ukho-textinput>\r\n<button ukho-button (click)=\"handleSearch()\">\r\n  Search\r\n</button>\r\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-9326dffbe7208808b674ec1a6da60642",
            "file": "src/lib/select/select.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "description": "<p>The label which will be used as a placeholder in the unfilled state, and as a field label in the filled state.</p>\n",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the form field is disabled.</p>\n",
                    "line": 16,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "validationMessages",
                    "defaultValue": "{ required: 'This field is required' }",
                    "description": "<p>A Record of string,string to provide custom messages to be used with Reactive Form validators\nEG: <code>{ required: This field is required }</code> will cause the <code>required</code> validator to display the message specified.</p>\n",
                    "line": 22,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "select",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>A reference to the select element within the wrapper component</p>\n",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'select', {static: true}"
                        }
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "`ukho-form-field-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 11,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when a blur event occurs on the input element.</p>\n",
                    "line": 32,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { UkhoAbstractFormField } from '../form-field/form-field';\r\n\r\n@Component({\r\n  selector: 'ukho-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss'],\r\n  host: {\r\n    class: 'text-area-wrap',\r\n    '[class.is-disabled]': 'disabled',\r\n    '[class.validated]': 'valid && touched',\r\n    '[class.invalid]': '!valid && touched',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SelectComponent extends UkhoAbstractFormField {\r\n  /**\r\n   * The label which will be used as a placeholder in the unfilled state, and as a field label in the filled state.\r\n   */\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * A reference to the select element within the wrapper component\r\n   */\r\n  @ViewChild('select', { static: true }) select: ElementRef;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  writeValue(obj: any): void {\r\n    this.select.nativeElement.value = obj;\r\n\r\n    super.writeValue(obj);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/colours';\r\n@use '~@ukho/styles/forms';\r\n@use '~@ukho/styles/fontawesome';\r\n\r\nselect {\r\n  appearance: none;\r\n  width: 100%;\r\n  height: 50px;\r\n  border: 2px solid colours.$colour-textinput-border;\r\n  color: colours.$colour-textinput-text;\r\n  padding-left: 18px;\r\n  outline: none;\r\n  background-color: colours.$colour-textinput-bg;\r\n  position: relative;\r\n  line-height: 3;\r\n\r\n  &:focus {\r\n    border-color: colours.$colour-textinput-text-active;\r\n    color: colours.$colour-textinput-text-active;\r\n    background-color: colours.$colour-white;\r\n  }\r\n}\r\n\r\n.wrapper {\r\n  position: relative;\r\n\r\n  &::after {\r\n    @extend .fa;\r\n    @extend .fa-chevron-down, :before;\r\n    position: absolute;\r\n    top: 16px;\r\n    right: 16px;\r\n  }\r\n\r\n  .is-disabled &::after {\r\n    color: colours.$colour-textinput-border-disabled;\r\n  }\r\n\r\n  .validated &::after {\r\n    color: colours.$colour-utility-success;\r\n  }\r\n\r\n  .invalid &::after {\r\n    color: colours.$colour-utility-error;\r\n  }\r\n}\r\n",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "UkhoAbstractFormField",
            "templateData": "<label [for]=\"id\" class=\"form-label\">{{ label }}</label>\r\n<div class=\"wrapper\">\r\n  <select #select [id]=\"id\" (change)=\"onChange($event.target.value)\" (blur)=\"onTouch()\" [disabled]=\"disabled\">\r\n    <ng-content></ng-content>\r\n  </select>\r\n</div>\r\n<ng-container *ngIf=\"!valid && touched\">\r\n  <p *ngIf=\"error\" class=\"error-text\">\r\n    {{ validationMessages[error] }}\r\n  </p>\r\n</ng-container>\r\n"
        },
        {
            "name": "SidenavComponent",
            "id": "component-SidenavComponent-94194c4cf37271b6c758161979381a9f",
            "file": "src/lib/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-sidenav",
            "styleUrls": [
                "./sidenav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navigation",
                    "line": 11,
                    "type": "SubSection[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input } from '@angular/core';\r\nimport { SubSection } from '../navtypes';\r\nimport { enhanceMainMenu } from '../nav-enhance';\r\n\r\n@Component({\r\n  selector: 'ukho-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss'],\r\n})\r\nexport class SidenavComponent implements AfterViewInit {\r\n  @Input() navigation: SubSection[];\r\n\r\n  ngAfterViewInit() {\r\n    enhanceMainMenu();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sidenav.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<nav *ngIf=\"navigation\" id=\"side-menu\" aria-label=\"Side menu\">\r\n  <section *ngFor=\"let subSection of navigation\" class=\"{{ subSection.active ? ' active' : '' }}\">\r\n    <h2>\r\n      <a href=\"{{ subSection.href }}\">{{ subSection.title }}</a>\r\n    </h2>\r\n    <ul>\r\n      <li *ngFor=\"let item of subSection.items\">\r\n        <a href=\"{{ item.href || '#' }}\">{{ item.title }}</a>\r\n      </li>\r\n    </ul>\r\n  </section>\r\n</nav>\r\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-922418c6e57c27f2932e39d2409b550f",
            "file": "src/lib/textarea/textarea.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "description": "<p>The label which will be used as a placeholder in the unfilled state, and as a field label in the filled state.</p>\n",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the form field is disabled.</p>\n",
                    "line": 16,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "validationMessages",
                    "defaultValue": "{ required: 'This field is required' }",
                    "description": "<p>A Record of string,string to provide custom messages to be used with Reactive Form validators\nEG: <code>{ required: This field is required }</code> will cause the <code>required</code> validator to display the message specified.</p>\n",
                    "line": 22,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "input",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>A reference to the input element within the wrapper component</p>\n",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input', {static: true}"
                        }
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "`ukho-form-field-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 11,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when a blur event occurs on the input element.</p>\n",
                    "line": 32,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { UkhoAbstractFormField } from '../form-field/form-field';\r\n\r\n@Component({\r\n  selector: 'ukho-textarea',\r\n  templateUrl: './textarea.component.html',\r\n  styleUrls: ['./textarea.component.scss'],\r\n  host: {\r\n    class: 'text-area-wrap',\r\n    '[class.is-disabled]': 'disabled',\r\n    '[class.validated]': 'valid && touched',\r\n    '[class.invalid]': '!valid && touched',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TextareaComponent extends UkhoAbstractFormField {\r\n  /**\r\n   * A reference to the input element within the wrapper component\r\n   */\r\n  @ViewChild('input', { static: true }) input: ElementRef;\r\n\r\n  /**\r\n   * The label which will be used as a placeholder in the unfilled state, and as a field label in the filled state.\r\n   */\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  writeValue(value: unknown): void {\r\n    this.input.nativeElement.value = value;\r\n\r\n    super.writeValue(value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/forms';\r\n@use '~@ukho/styles/textarea';\r\n",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "UkhoAbstractFormField",
            "templateData": "<label [for]=\"id\">{{ label }}</label>\r\n<textarea #input [id]=\"id\" (input)=\"onChange($event.target.value)\" (blur)=\"onTouch()\" [disabled]=\"disabled\"></textarea>\r\n<span class=\"resizer-arrow-wrap\">\r\n  <span class=\"resizer-arrow\"></span>\r\n</span>\r\n<ng-container *ngIf=\"!valid && touched\">\r\n  <p *ngIf=\"error\" class=\"error-text\">\r\n    {{ validationMessages[error] }}\r\n  </p>\r\n</ng-container>\r\n"
        },
        {
            "name": "TextinputComponent",
            "id": "component-TextinputComponent-be564a6527c82659a43dbdef7b023acd",
            "file": "src/lib/textinput/textinput.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ukho-textinput",
            "styleUrls": [
                "./textinput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textinput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "description": "<p>The label which will be used as a placeholder in the unfilled state, and as a field label in the filled state.</p>\n",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "description": "<p>The input type, options are: <code>text | date | time | email | password | tel | url</code></p>\n",
                    "line": 25,
                    "type": "\"text\" | \"date\" | \"time\" | \"email\" | \"password\" | \"tel\" | \"url\""
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "description": "<p>This dictates whether the form field is disabled.</p>\n",
                    "line": 16,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "validationMessages",
                    "defaultValue": "{ required: 'This field is required' }",
                    "description": "<p>A Record of string,string to provide custom messages to be used with Reactive Form validators\nEG: <code>{ required: This field is required }</code> will cause the <code>required</code> validator to display the message specified.</p>\n",
                    "line": 22,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "input",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>A reference to the input element within the wrapper component</p>\n",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input', {static: true}"
                        }
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "`ukho-form-field-${++nextId}`",
                    "type": "",
                    "optional": false,
                    "description": "<p>AUTOGENERATED\nThis is an auto-generated form-field ID</p>\n",
                    "line": 11,
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when an input event occurs on the input element.</p>\n",
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "<p>The registered callback function called when a blur event occurs on the input element.</p>\n",
                    "line": 32,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "description": "<p>Registers a function called when the control value changes.\nUsed by ReactiveForms to check for changes</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string"
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "description": "<p>Registers a function called when the control is touched.\nUsed by ReactiveForms to check for touched-ness</p>\n",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "description": "<p>Sets the &quot;disabled&quot; property on the input element.\nUsed by ReactiveForms for setting the disablement of the element.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Sets the &quot;value&quot; property on the input element.\nUsed by ReactiveForms for setting the element value.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "UkhoAbstractFormField"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { UkhoAbstractFormField } from '../form-field/form-field';\r\n\r\n@Component({\r\n  selector: 'ukho-textinput',\r\n  templateUrl: './textinput.component.html',\r\n  styleUrls: ['./textinput.component.scss'],\r\n  host: {\r\n    class: 'text-input-wrap',\r\n    '[class.is-disabled]': 'disabled',\r\n    '[class.validated]': 'valid && touched',\r\n    '[class.invalid]': '!valid && touched',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TextinputComponent extends UkhoAbstractFormField {\r\n  /**\r\n   * A reference to the input element within the wrapper component\r\n   */\r\n  @ViewChild('input', { static: true }) input: ElementRef;\r\n\r\n  /**\r\n   * The input type, options are: `text | date | time | email | password | tel | url`\r\n   */\r\n  @Input() type: 'text' | 'date' | 'time' | 'email' | 'password' | 'tel' | 'url' = 'text';\r\n\r\n  /**\r\n   * The label which will be used as a placeholder in the unfilled state, and as a field label in the filled state.\r\n   */\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  writeValue(value: unknown): void {\r\n    this.input.nativeElement.value = value;\r\n    super.writeValue(value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/forms';\r\n@use '~@ukho/styles/textinput';\r\n\r\ninput[type='time']::-webkit-inner-spin-button,\r\ninput[type='date']::-webkit-inner-spin-button,\r\ninput[type='time']::-webkit-clear-button,\r\ninput[type='date']::-webkit-clear-button {\r\n  display: none;\r\n}\r\n",
                    "styleUrl": "./textinput.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "UkhoAbstractFormField",
            "templateData": "<input\r\n  #input\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n  class=\"form-text-input\"\r\n  (input)=\"onChange($event.target.value)\"\r\n  (blur)=\"onTouch()\"\r\n  [disabled]=\"disabled\"\r\n/>\r\n<div\r\n  class=\"input-wrap\"\r\n  [ngClass]=\"{\r\n    'has-value': !!input.value || type === 'date' || type === 'time'\r\n  }\"\r\n>\r\n  <label [for]=\"id\">{{ label }}</label>\r\n</div>\r\n<span *ngIf=\"valid && touched\" class=\"icon validated-icon fa fa-check\"></span>\r\n<ng-container *ngIf=\"!valid && touched\">\r\n  <span class=\"icon invalid-icon fa fa-exclamation\"></span>\r\n  <p *ngIf=\"error\" class=\"error-text\">\r\n    {{ validationMessages[error] }}\r\n  </p>\r\n</ng-container>\r\n"
        },
        {
            "name": "UkhoFooterRow",
            "id": "component-UkhoFooterRow-d9c35fa2613c6e228caa903ef58cc969",
            "file": "src/lib/table/row.directive.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "matFooterRow",
            "host": {},
            "inputs": [],
            "moduleId": "module.id",
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: CdkFooterRow, useExisting: UkhoFooterRow }"
                }
            ],
            "selector": "ukho-footer-row, tr[ukho-footer-row]",
            "styleUrls": [],
            "styles": [],
            "template": "CDK_ROW_TEMPLATE",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkFooterRow,\r\n  CdkFooterRowDef,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\nimport { ChangeDetectionStrategy, Component, Directive, ViewEncapsulation } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderRowDef]',\r\n  providers: [{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }],\r\n  inputs: ['columns: ukhoHeaderRowDef', 'sticky: ukhoHeaderRowDefSticky'],\r\n})\r\nexport class UkhoHeaderRowDef extends CdkHeaderRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterRowDef]',\r\n  providers: [{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }],\r\n  inputs: ['columns: ukhoFooterRowDef', 'sticky: ukhoFooterRowDefSticky'],\r\n})\r\nexport class UkhoFooterRowDef extends CdkFooterRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoRowDef]',\r\n  providers: [{ provide: CdkRowDef, useExisting: UkhoRowDef }],\r\n  inputs: ['columns: ukhoRowDefColumns', 'when: ukhoRowDefWhen'],\r\n})\r\nexport class UkhoRowDef<T> extends CdkRowDef<T> {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-header-row, tr[ukho-header-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-header-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  providers: [{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }],\r\n})\r\nexport class UkhoHeaderRow extends CdkHeaderRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-footer-row, tr[ukho-footer-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-footer-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matFooterRow',\r\n  providers: [{ provide: CdkFooterRow, useExisting: UkhoFooterRow }],\r\n})\r\nexport class UkhoFooterRow extends CdkFooterRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-row, tr[ukho-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  providers: [{ provide: CdkRow, useExisting: UkhoRow }],\r\n})\r\nexport class UkhoRow extends CdkRow {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CdkFooterRow"
        },
        {
            "name": "UkhoHeaderRow",
            "id": "component-UkhoHeaderRow-d9c35fa2613c6e228caa903ef58cc969",
            "file": "src/lib/table/row.directive.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "matHeaderRow",
            "host": {},
            "inputs": [],
            "moduleId": "module.id",
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }"
                }
            ],
            "selector": "ukho-header-row, tr[ukho-header-row]",
            "styleUrls": [],
            "styles": [],
            "template": "CDK_ROW_TEMPLATE",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkFooterRow,\r\n  CdkFooterRowDef,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\nimport { ChangeDetectionStrategy, Component, Directive, ViewEncapsulation } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderRowDef]',\r\n  providers: [{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }],\r\n  inputs: ['columns: ukhoHeaderRowDef', 'sticky: ukhoHeaderRowDefSticky'],\r\n})\r\nexport class UkhoHeaderRowDef extends CdkHeaderRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterRowDef]',\r\n  providers: [{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }],\r\n  inputs: ['columns: ukhoFooterRowDef', 'sticky: ukhoFooterRowDefSticky'],\r\n})\r\nexport class UkhoFooterRowDef extends CdkFooterRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoRowDef]',\r\n  providers: [{ provide: CdkRowDef, useExisting: UkhoRowDef }],\r\n  inputs: ['columns: ukhoRowDefColumns', 'when: ukhoRowDefWhen'],\r\n})\r\nexport class UkhoRowDef<T> extends CdkRowDef<T> {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-header-row, tr[ukho-header-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-header-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  providers: [{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }],\r\n})\r\nexport class UkhoHeaderRow extends CdkHeaderRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-footer-row, tr[ukho-footer-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-footer-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matFooterRow',\r\n  providers: [{ provide: CdkFooterRow, useExisting: UkhoFooterRow }],\r\n})\r\nexport class UkhoFooterRow extends CdkFooterRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-row, tr[ukho-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  providers: [{ provide: CdkRow, useExisting: UkhoRow }],\r\n})\r\nexport class UkhoRow extends CdkRow {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CdkHeaderRow"
        },
        {
            "name": "UkhoRow",
            "id": "component-UkhoRow-d9c35fa2613c6e228caa903ef58cc969",
            "file": "src/lib/table/row.directive.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "matRow",
            "host": {},
            "inputs": [],
            "moduleId": "module.id",
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: CdkRow, useExisting: UkhoRow }"
                }
            ],
            "selector": "ukho-row, tr[ukho-row]",
            "styleUrls": [],
            "styles": [],
            "template": "CDK_ROW_TEMPLATE",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n  CDK_ROW_TEMPLATE,\r\n  CdkFooterRow,\r\n  CdkFooterRowDef,\r\n  CdkHeaderRow,\r\n  CdkHeaderRowDef,\r\n  CdkRow,\r\n  CdkRowDef,\r\n} from '@angular/cdk/table';\r\nimport { ChangeDetectionStrategy, Component, Directive, ViewEncapsulation } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ukhoHeaderRowDef]',\r\n  providers: [{ provide: CdkHeaderRowDef, useExisting: UkhoHeaderRowDef }],\r\n  inputs: ['columns: ukhoHeaderRowDef', 'sticky: ukhoHeaderRowDefSticky'],\r\n})\r\nexport class UkhoHeaderRowDef extends CdkHeaderRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoFooterRowDef]',\r\n  providers: [{ provide: CdkFooterRowDef, useExisting: UkhoFooterRowDef }],\r\n  inputs: ['columns: ukhoFooterRowDef', 'sticky: ukhoFooterRowDefSticky'],\r\n})\r\nexport class UkhoFooterRowDef extends CdkFooterRowDef {}\r\n\r\n@Directive({\r\n  selector: '[ukhoRowDef]',\r\n  providers: [{ provide: CdkRowDef, useExisting: UkhoRowDef }],\r\n  inputs: ['columns: ukhoRowDefColumns', 'when: ukhoRowDefWhen'],\r\n})\r\nexport class UkhoRowDef<T> extends CdkRowDef<T> {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-header-row, tr[ukho-header-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-header-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matHeaderRow',\r\n  providers: [{ provide: CdkHeaderRow, useExisting: UkhoHeaderRow }],\r\n})\r\nexport class UkhoHeaderRow extends CdkHeaderRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-footer-row, tr[ukho-footer-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-footer-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matFooterRow',\r\n  providers: [{ provide: CdkFooterRow, useExisting: UkhoFooterRow }],\r\n})\r\nexport class UkhoFooterRow extends CdkFooterRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'ukho-row, tr[ukho-row]',\r\n  template: CDK_ROW_TEMPLATE,\r\n  host: {\r\n    class: 'ukho-row',\r\n    role: 'row',\r\n  },\r\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matRow',\r\n  providers: [{ provide: CdkRow, useExisting: UkhoRow }],\r\n})\r\nexport class UkhoRow extends CdkRow {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CdkRow"
        },
        {
            "name": "UkhoTable",
            "id": "component-UkhoTable-3043e73620dffe58e80ece6a23c947db",
            "file": "src/lib/table/table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "ukhoTable",
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: CdkTable, useExisting: UkhoTable }"
                }
            ],
            "selector": "ukho-table, table[ukho-table]",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "template": "CDK_TABLE_TEMPLATE",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { CDK_TABLE_TEMPLATE, CdkTable } from '@angular/cdk/table';\r\n\r\n@Component({\r\n  selector: 'ukho-table, table[ukho-table]',\r\n  exportAs: 'ukhoTable',\r\n  template: CDK_TABLE_TEMPLATE,\r\n  styleUrls: ['./table.component.scss'],\r\n  providers: [{ provide: CdkTable, useExisting: UkhoTable }],\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class UkhoTable<T> extends CdkTable<T> {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@ukho/styles/tables';\r\n@use '~@ukho/styles/fontawesome';\r\n\r\nth[ukho-sort-header] {\r\n  white-space: nowrap;\r\n\r\n  &::after {\r\n    @extend .fa;\r\n    @extend .fa-caret-up, :before;\r\n    opacity: 0;\r\n    margin-left: 0.4rem;\r\n  }\r\n\r\n  &:hover::after {\r\n    opacity: 0.4;\r\n  }\r\n\r\n  &.asc::after {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.desc::after {\r\n    @extend .fa-caret-down, :before;\r\n    opacity: 1;\r\n  }\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "CdkTable"
        }
    ],
    "modules": [
        {
            "name": "BreadcrumbsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BreadcrumbsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BreadcrumbsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DialogueModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogueComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DialogueComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExpansionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExpansionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExpansionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FileInputModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FileInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FileInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavigationModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavigationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaginatorModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PhaseBannerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PhaseBannerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PhaseBannerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProgressBarModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RadioGroupModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioGroupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioGroupComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RadioModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReadmoreModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReadMoreComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReadMoreComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "TextinputModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SidenavModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SidenavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SidenavComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UkhoCell"
                        },
                        {
                            "name": "UkhoCellDef"
                        },
                        {
                            "name": "UkhoColumnDef"
                        },
                        {
                            "name": "UkhoFooterCell"
                        },
                        {
                            "name": "UkhoFooterCellDef"
                        },
                        {
                            "name": "UkhoFooterRow"
                        },
                        {
                            "name": "UkhoFooterRowDef"
                        },
                        {
                            "name": "UkhoHeaderCell"
                        },
                        {
                            "name": "UkhoHeaderCellDef"
                        },
                        {
                            "name": "UkhoHeaderRow"
                        },
                        {
                            "name": "UkhoHeaderRowDef"
                        },
                        {
                            "name": "UkhoRow"
                        },
                        {
                            "name": "UkhoRowDef"
                        },
                        {
                            "name": "UkhoSort"
                        },
                        {
                            "name": "UkhoSortHeader"
                        },
                        {
                            "name": "UkhoTable"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UkhoCell"
                        },
                        {
                            "name": "UkhoCellDef"
                        },
                        {
                            "name": "UkhoColumnDef"
                        },
                        {
                            "name": "UkhoFooterCell"
                        },
                        {
                            "name": "UkhoFooterCellDef"
                        },
                        {
                            "name": "UkhoFooterRow"
                        },
                        {
                            "name": "UkhoFooterRowDef"
                        },
                        {
                            "name": "UkhoHeaderCell"
                        },
                        {
                            "name": "UkhoHeaderCellDef"
                        },
                        {
                            "name": "UkhoHeaderRow"
                        },
                        {
                            "name": "UkhoHeaderRowDef"
                        },
                        {
                            "name": "UkhoRow"
                        },
                        {
                            "name": "UkhoRowDef"
                        },
                        {
                            "name": "UkhoSort"
                        },
                        {
                            "name": "UkhoSortHeader"
                        },
                        {
                            "name": "UkhoTable"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextareaModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextinputModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextinputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextinputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/table/mock-data.ts",
                "type": "object",
                "defaultValue": "{\r\n  headings: ['folio', 'title', 'from', 'to'],\r\n  records: [\r\n    {\r\n      folio: '5600',\r\n      title: 'The Solent and Approaches',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'East Devon and Dorset Coast, Exmouth to Christchurch',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'The West Country, Falmouth to Teignmouth',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'Falmouth to Hartland Point including the Isles of Scilly',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'The Channel Islands',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'Chichester to Ramsgate and Calais to Oostende',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n  ],\r\n}"
            },
            {
                "name": "DECLARATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/table/table.module.ts",
                "type": "[]",
                "defaultValue": "[\r\n  UkhoTable,\r\n  UkhoHeaderCellDef,\r\n  UkhoHeaderRowDef,\r\n  UkhoColumnDef,\r\n  UkhoCellDef,\r\n  UkhoRowDef,\r\n  UkhoFooterCellDef,\r\n  UkhoFooterRowDef,\r\n  UkhoHeaderCell,\r\n  UkhoCell,\r\n  UkhoFooterCell,\r\n  UkhoHeaderRow,\r\n  UkhoRow,\r\n  UkhoFooterRow,\r\n  UkhoSort,\r\n  UkhoSortHeader,\r\n]"
            },
            {
                "name": "fileSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/file-input/file-input.component.ts",
                "type": "",
                "defaultValue": "fileSizeNs"
            },
            {
                "name": "mockNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/navigation/mocknavigation.ts",
                "type": "Navigation",
                "defaultValue": "{\r\n  heading: 'Main heading',\r\n  sections: [\r\n    {\r\n      title: 'Section One',\r\n      href: '#section-one',\r\n      subSections: [\r\n        {\r\n          title: 'SubSectionOne',\r\n          href: '#sub-section-one',\r\n          items: [\r\n            { title: 'itemOne1a', href: '#itemOne1a' },\r\n            { title: 'itemOne2a', href: '#itemOne2a' },\r\n            { title: 'itemOne3a', href: '#itemOne3a' },\r\n            { title: 'itemOne4a', href: '#itemOne4a' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSectionTwo',\r\n          href: '#sub-section-two',\r\n          items: [\r\n            { title: 'itemOne1b', href: '#itemOne1b' },\r\n            { title: 'itemOne2b', href: '#itemOne2b' },\r\n            { title: 'itemOne3b', href: '#itemOne3b' },\r\n            { title: 'itemOne4b', href: '#itemOne4b' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSectionThree',\r\n          href: '#sub-section-three',\r\n          items: [\r\n            { title: 'itemOne1c', href: '#itemOne1c' },\r\n            { title: 'itemOne2c', href: '#itemOne2c' },\r\n            { title: 'itemOne3c', href: '#itemOne3c' },\r\n            { title: 'itemOne4c', href: '#itemOne4c' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Section Two',\r\n      href: '#section-two',\r\n      subSections: [\r\n        {\r\n          title: 'SubSection2One',\r\n          href: '#sub-section-2one',\r\n          items: [\r\n            { title: 'itemTwo1a', href: '#itemTwo1a' },\r\n            { title: 'itemTwo2a', href: '#itemTwo2a' },\r\n            { title: 'itemTwo3a', href: '#itemTwo3a' },\r\n            { title: 'itemTwo4a', href: '#itemTwo4a' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection2Two',\r\n          href: '#sub-section-2two',\r\n          items: [\r\n            { title: 'itemTwo1b', href: '#itemTwo1b' },\r\n            { title: 'itemTwo2b', href: '#itemTwo2b' },\r\n            { title: 'itemTwo3b', href: '#itemTwo3b' },\r\n            { title: 'itemTwo4b', href: '#itemTwo4b' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection2Three',\r\n          href: '#sub-section-2three',\r\n          items: [\r\n            { title: 'itemTwo1c', href: '#itemTwo1c' },\r\n            { title: 'itemTwo2c', href: '#itemTwo2c' },\r\n            { title: 'itemTwo3c', href: '#itemTwo3c' },\r\n            { title: 'itemTwo4c', href: '#itemTwo4c' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Section Three',\r\n      href: '#section-three',\r\n      subSections: [\r\n        {\r\n          title: 'SubSection3One',\r\n          href: '#sub-section-3one',\r\n          items: [\r\n            { title: 'item1aThree', href: '#item1aThree' },\r\n            { title: 'item2aThree', href: '#item2aThree' },\r\n            { title: 'item3aThree', href: '#item3aThree' },\r\n            { title: 'item4aThree', href: '#item4aThree' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection3Two',\r\n          href: '#sub-section-3two',\r\n          items: [\r\n            { title: 'item1bThree', href: '#item1bThree' },\r\n            { title: 'item2bThree', href: '#item2bThree' },\r\n            { title: 'item3bThree', href: '#item3bThree' },\r\n            { title: 'item4bThree', href: '#item4bThree' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection3Three',\r\n          href: '#sub-section-3three',\r\n          items: [\r\n            { title: 'item1cThree', href: '#item1cThree' },\r\n            { title: 'item2cThree', href: '#item2cThree' },\r\n            { title: 'item3cThree', href: '#item3cThree' },\r\n            { title: 'item4cThree', href: '#item4cThree' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n}"
            },
            {
                "name": "mockSideNav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/sidenav/mocknavigation.ts",
                "type": "SubSection[]",
                "defaultValue": "[\r\n  {\r\n    title: 'SubSectionOne',\r\n    href: '#sub-section-one',\r\n    active: true,\r\n    items: [\r\n      { title: 'itemOne1a', href: '#itemOne1a' },\r\n      { title: 'itemOne2a', href: '#itemOne2a' },\r\n      { title: 'itemOne3a', href: '#itemOne3a' },\r\n      { title: 'itemOne4a', href: '#itemOne4a' },\r\n    ],\r\n  },\r\n  {\r\n    title: 'SubSectionTwo',\r\n    href: '#sub-section-two',\r\n    items: [\r\n      { title: 'itemOne1b', href: '#itemOne1b' },\r\n      { title: 'itemOne2b', href: '#itemOne2b' },\r\n      { title: 'itemOne3b', href: '#itemOne3b' },\r\n      { title: 'itemOne4b', href: '#itemOne4b' },\r\n    ],\r\n  },\r\n  {\r\n    title: 'SubSectionThree',\r\n    href: '#sub-section-three',\r\n    items: [\r\n      { title: 'itemOne1c', href: '#itemOne1c' },\r\n      { title: 'itemOne2c', href: '#itemOne2c' },\r\n      { title: 'itemOne3c', href: '#itemOne3c' },\r\n      { title: 'itemOne4c', href: '#itemOne4c' },\r\n    ],\r\n  },\r\n]"
            },
            {
                "name": "nextId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/expansion/expansion.component.ts",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "nextId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/form-field/form-field.ts",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "nextId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/radio/radio.component.ts",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "nextId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/readmore/readmore.component.ts",
                "type": "number",
                "defaultValue": "0"
            }
        ],
        "functions": [
            {
                "name": "enhanceMainMenu",
                "file": "src/lib/nav-enhance.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            },
            {
                "name": "enhanceSideMenu",
                "file": "src/lib/nav-enhance.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            },
            {
                "name": "setupMenu",
                "file": "src/lib/nav-enhance.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "menuLinks",
                        "type": ""
                    },
                    {
                        "name": "parentLevels",
                        "type": "number"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "menuLinks",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "parentLevels",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "toggleMenu",
                "file": "src/lib/nav-enhance.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "evt",
                        "type": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "evt",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "SortDirection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"asc\" | \"desc\" | \"\"",
                "file": "src/lib/table/sort.directive.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/lib/table/mock-data.ts": [
                {
                    "name": "data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/table/mock-data.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  headings: ['folio', 'title', 'from', 'to'],\r\n  records: [\r\n    {\r\n      folio: '5600',\r\n      title: 'The Solent and Approaches',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'East Devon and Dorset Coast, Exmouth to Christchurch',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'The West Country, Falmouth to Teignmouth',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'Falmouth to Hartland Point including the Isles of Scilly',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'The Channel Islands',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n    {\r\n      folio: '5600',\r\n      title: 'Chichester to Ramsgate and Calais to Oostende',\r\n      from: '26/05/16',\r\n      to: '26/05/16',\r\n    },\r\n  ],\r\n}"
                }
            ],
            "src/lib/table/table.module.ts": [
                {
                    "name": "DECLARATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/table/table.module.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n  UkhoTable,\r\n  UkhoHeaderCellDef,\r\n  UkhoHeaderRowDef,\r\n  UkhoColumnDef,\r\n  UkhoCellDef,\r\n  UkhoRowDef,\r\n  UkhoFooterCellDef,\r\n  UkhoFooterRowDef,\r\n  UkhoHeaderCell,\r\n  UkhoCell,\r\n  UkhoFooterCell,\r\n  UkhoHeaderRow,\r\n  UkhoRow,\r\n  UkhoFooterRow,\r\n  UkhoSort,\r\n  UkhoSortHeader,\r\n]"
                }
            ],
            "src/lib/file-input/file-input.component.ts": [
                {
                    "name": "fileSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/file-input/file-input.component.ts",
                    "type": "",
                    "defaultValue": "fileSizeNs"
                }
            ],
            "src/lib/navigation/mocknavigation.ts": [
                {
                    "name": "mockNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/navigation/mocknavigation.ts",
                    "type": "Navigation",
                    "defaultValue": "{\r\n  heading: 'Main heading',\r\n  sections: [\r\n    {\r\n      title: 'Section One',\r\n      href: '#section-one',\r\n      subSections: [\r\n        {\r\n          title: 'SubSectionOne',\r\n          href: '#sub-section-one',\r\n          items: [\r\n            { title: 'itemOne1a', href: '#itemOne1a' },\r\n            { title: 'itemOne2a', href: '#itemOne2a' },\r\n            { title: 'itemOne3a', href: '#itemOne3a' },\r\n            { title: 'itemOne4a', href: '#itemOne4a' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSectionTwo',\r\n          href: '#sub-section-two',\r\n          items: [\r\n            { title: 'itemOne1b', href: '#itemOne1b' },\r\n            { title: 'itemOne2b', href: '#itemOne2b' },\r\n            { title: 'itemOne3b', href: '#itemOne3b' },\r\n            { title: 'itemOne4b', href: '#itemOne4b' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSectionThree',\r\n          href: '#sub-section-three',\r\n          items: [\r\n            { title: 'itemOne1c', href: '#itemOne1c' },\r\n            { title: 'itemOne2c', href: '#itemOne2c' },\r\n            { title: 'itemOne3c', href: '#itemOne3c' },\r\n            { title: 'itemOne4c', href: '#itemOne4c' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Section Two',\r\n      href: '#section-two',\r\n      subSections: [\r\n        {\r\n          title: 'SubSection2One',\r\n          href: '#sub-section-2one',\r\n          items: [\r\n            { title: 'itemTwo1a', href: '#itemTwo1a' },\r\n            { title: 'itemTwo2a', href: '#itemTwo2a' },\r\n            { title: 'itemTwo3a', href: '#itemTwo3a' },\r\n            { title: 'itemTwo4a', href: '#itemTwo4a' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection2Two',\r\n          href: '#sub-section-2two',\r\n          items: [\r\n            { title: 'itemTwo1b', href: '#itemTwo1b' },\r\n            { title: 'itemTwo2b', href: '#itemTwo2b' },\r\n            { title: 'itemTwo3b', href: '#itemTwo3b' },\r\n            { title: 'itemTwo4b', href: '#itemTwo4b' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection2Three',\r\n          href: '#sub-section-2three',\r\n          items: [\r\n            { title: 'itemTwo1c', href: '#itemTwo1c' },\r\n            { title: 'itemTwo2c', href: '#itemTwo2c' },\r\n            { title: 'itemTwo3c', href: '#itemTwo3c' },\r\n            { title: 'itemTwo4c', href: '#itemTwo4c' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Section Three',\r\n      href: '#section-three',\r\n      subSections: [\r\n        {\r\n          title: 'SubSection3One',\r\n          href: '#sub-section-3one',\r\n          items: [\r\n            { title: 'item1aThree', href: '#item1aThree' },\r\n            { title: 'item2aThree', href: '#item2aThree' },\r\n            { title: 'item3aThree', href: '#item3aThree' },\r\n            { title: 'item4aThree', href: '#item4aThree' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection3Two',\r\n          href: '#sub-section-3two',\r\n          items: [\r\n            { title: 'item1bThree', href: '#item1bThree' },\r\n            { title: 'item2bThree', href: '#item2bThree' },\r\n            { title: 'item3bThree', href: '#item3bThree' },\r\n            { title: 'item4bThree', href: '#item4bThree' },\r\n          ],\r\n        },\r\n        {\r\n          title: 'SubSection3Three',\r\n          href: '#sub-section-3three',\r\n          items: [\r\n            { title: 'item1cThree', href: '#item1cThree' },\r\n            { title: 'item2cThree', href: '#item2cThree' },\r\n            { title: 'item3cThree', href: '#item3cThree' },\r\n            { title: 'item4cThree', href: '#item4cThree' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n}"
                }
            ],
            "src/lib/sidenav/mocknavigation.ts": [
                {
                    "name": "mockSideNav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/sidenav/mocknavigation.ts",
                    "type": "SubSection[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'SubSectionOne',\r\n    href: '#sub-section-one',\r\n    active: true,\r\n    items: [\r\n      { title: 'itemOne1a', href: '#itemOne1a' },\r\n      { title: 'itemOne2a', href: '#itemOne2a' },\r\n      { title: 'itemOne3a', href: '#itemOne3a' },\r\n      { title: 'itemOne4a', href: '#itemOne4a' },\r\n    ],\r\n  },\r\n  {\r\n    title: 'SubSectionTwo',\r\n    href: '#sub-section-two',\r\n    items: [\r\n      { title: 'itemOne1b', href: '#itemOne1b' },\r\n      { title: 'itemOne2b', href: '#itemOne2b' },\r\n      { title: 'itemOne3b', href: '#itemOne3b' },\r\n      { title: 'itemOne4b', href: '#itemOne4b' },\r\n    ],\r\n  },\r\n  {\r\n    title: 'SubSectionThree',\r\n    href: '#sub-section-three',\r\n    items: [\r\n      { title: 'itemOne1c', href: '#itemOne1c' },\r\n      { title: 'itemOne2c', href: '#itemOne2c' },\r\n      { title: 'itemOne3c', href: '#itemOne3c' },\r\n      { title: 'itemOne4c', href: '#itemOne4c' },\r\n    ],\r\n  },\r\n]"
                }
            ],
            "src/lib/expansion/expansion.component.ts": [
                {
                    "name": "nextId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/expansion/expansion.component.ts",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "src/lib/form-field/form-field.ts": [
                {
                    "name": "nextId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/form-field/form-field.ts",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "src/lib/radio/radio.component.ts": [
                {
                    "name": "nextId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/radio/radio.component.ts",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "src/lib/readmore/readmore.component.ts": [
                {
                    "name": "nextId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/readmore/readmore.component.ts",
                    "type": "number",
                    "defaultValue": "0"
                }
            ]
        },
        "groupedFunctions": {
            "src/lib/nav-enhance.ts": [
                {
                    "name": "enhanceMainMenu",
                    "file": "src/lib/nav-enhance.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                },
                {
                    "name": "enhanceSideMenu",
                    "file": "src/lib/nav-enhance.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                },
                {
                    "name": "setupMenu",
                    "file": "src/lib/nav-enhance.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "menuLinks",
                            "type": ""
                        },
                        {
                            "name": "parentLevels",
                            "type": "number"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "menuLinks",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentLevels",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "file": "src/lib/nav-enhance.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "evt",
                            "type": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/lib/table/sort.directive.ts": [
                {
                    "name": "SortDirection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"asc\" | \"desc\" | \"\"",
                    "file": "src/lib/table/sort.directive.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 13,
        "status": "low",
        "files": [
            {
                "filePath": "src/lib/breadcrumbs/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbsComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "src/lib/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/lib/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 68,
                "coverageCount": "11/16",
                "status": "good"
            },
            {
                "filePath": "src/lib/dialogue/dialogue.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/lib/expansion/expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/lib/expansion/expansion.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nextId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/file-input/file-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileInputComponent",
                "coveragePercent": 63,
                "coverageCount": "12/19",
                "status": "good"
            },
            {
                "filePath": "src/lib/file-input/file-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fileSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/form-field/form-field.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UkhoAbstractFormField",
                "coveragePercent": 77,
                "coverageCount": "7/9",
                "status": "very-good"
            },
            {
                "filePath": "src/lib/form-field/form-field.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nextId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/lib/nav-enhance.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "enhanceMainMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/nav-enhance.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "enhanceSideMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/nav-enhance.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "setupMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/nav-enhance.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "toggleMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/navigation/mocknavigation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/navtypes.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/lib/navtypes.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/navtypes.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Section",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/lib/navtypes.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubSection",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/lib/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/lib/phase-banner/phase-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhaseBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/radio-group/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupComponent",
                "coveragePercent": 76,
                "coverageCount": "10/13",
                "status": "very-good"
            },
            {
                "filePath": "src/lib/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/lib/radio/radio.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nextId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/readmore/readmore.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReadMoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/lib/readmore/readmore.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nextId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/lib/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 91,
                "coverageCount": "11/12",
                "status": "very-good"
            },
            {
                "filePath": "src/lib/sidenav/mocknavigation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockSideNav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoCellDef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoColumnDef",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoFooterCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoFooterCellDef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoHeaderCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/cell.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoHeaderCellDef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/row.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "UkhoFooterRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/row.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "UkhoHeaderRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/row.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "UkhoRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoFooterRowDef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoHeaderRowDef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoRowDef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/sort-header.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoSortHeader",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/sort.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UkhoSort",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/sort.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SortState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UkhoTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/table/table.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DECLARATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 91,
                "coverageCount": "11/12",
                "status": "very-good"
            },
            {
                "filePath": "src/lib/textinput/textinput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextinputComponent",
                "coveragePercent": 92,
                "coverageCount": "12/13",
                "status": "very-good"
            }
        ]
    }
}