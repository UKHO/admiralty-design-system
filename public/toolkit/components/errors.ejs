<h1>Errors</h1>

<p class="intro">
    Use buttons to guide users towards completing a task.
    They should include text that describes the action they perform.
</p>

<ol>
    <li><a href="#anchor1">Error summary</a></li>
    <li><a href="#anchor2">Field error</a></li>
    <li><a href="#anchor3">Button error</a></li>
</ol>

<h3 id="anchor3">3. Button error</h3>

<p>Use button errors to let users know there's a problem after they've clicked a button.</p>

<div class="tab-set">
    <%- partial('../../_partials/tabs', { id: 'errors-button' }) %>
    <section>
        <div class="tab1 component-example">
            <div class="button-wrapper">
                <button class="error icon">
                    <p>Next</p>
                    <i class="fa fa-chevron-right"></i>
                </button>
                <div class="error-wrap">
                    <span class="fa fa-exclamation"></span>
                    <span>There's a problem with the information you provided</span>
                </div>
            </div>
        </div>
        <div class="tab2 component-html">
            HTML goes here.
        </div>
        <div class="tab3 component-angular">
            <h5>Angular example usage:</h5>
            <code class="language-html">
                &lt;app-button
                [label]="'Open folder'"
                [icon]="'fa-folder'"
                [isSecondary]="true"
                [onClick]="logClick"
                &gt;
                &lt;/app-button&gt;
            </code>
            <br />
            <br />
            <h5>Angular component:</h5>
            <pre>
                <code class="language-javascript">import { Component, Input } from '@angular/core';

@Component({
                    selector: 'app-button',
                    templateUrl: './button.component.html',
                    styleUrls: ['./button.component.scss']
})
export class ButtonComponent {

                    constructor() { }

  @Input() label: string;

  @Input() isSecondary: boolean;

  @Input() icon: string;

  @Input() onClick: () => any;

  handleClick() {
    this.onClick()
  }
}
                </code>
            </pre>
            <h5>Angular template:</h5>
            <pre>
                <code class="language-html">&lt;button
    [class.secondary]=&quot;isSecondary === true&quot;
    [class.icon]=&quot;icon&quot;
    (click)=&quot;handleClick()&quot;
&gt;
    &lt;p&gt;
                    {{label}}
                    &lt;/p&gt;
    &lt;i *ngIf= &quot;icon&quot; class=&quot;fa {{icon}}&quot;&gt;&lt;/i&gt;
&lt;/button&gt;
                </code>
            </pre>
        </div>
    </section>
</div>
