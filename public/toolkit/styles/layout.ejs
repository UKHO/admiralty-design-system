<h1>Layout grid</h1>

<p class="intro">
    We use a responsive grid system to allow content to display correctly across all screen sizes.
</p>

<ol>
    <li><a href="#anchor1">Grid system</a></li>
    <li><a href="#anchor2">Breakpoints</a></li>
</ol>

<h3 id="anchor1">1. Grid system</h3>

<p>
    We have implemented a grid system based on Material Design’s <a target="_blank" href="https://material.io/design/layout/responsive-layout-grid.html">responsive layout grid</a>.
    The grid is made up of columns, gutters and margins that scale appropriately across different screen sizes.
</p>

<div class="tab-set">
    <%- partial('../../_partials/tabs', { noAngular: true }) %>
    <section>
        <div class="tab1 component-example">

            <div class="mdc-layout-grid colours-grid">
                <div class="mdc-layout-grid__inner layout-example">
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 tablet-or-desktop"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 tablet-or-desktop"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 tablet-or-desktop"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 tablet-or-desktop"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 desktop-only"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 desktop-only"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 desktop-only"></div>
                    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-1 desktop-only"></div>
                </div>
            </div>

        </div>
        <div class="tab2 component-html">
            HTML injected here.
        </div>
    </section>
</div>

<h3 id="anchor1">2. Breakpoints</h3>

<p>
    The layout will automatically adjust the number of columns, and the widths of columns, gutters and margins, at different screen sizes.
    As a rough guide you will get 12 columns on desktop, 8 columns on tablet, and 4 columns on phone.
</p>

<table>
    <thead>
        <tr>
            <th>Viewport size (px)</th><th>Portrait</th><th>Landscape</th><th>Columns</th><th>Margins / Gutters (px)*</th>
        </tr>
    </thead>
    <tr><td>0 - 359</td><td>Small phone</td><td> </td><td>4</td><td>16</td></tr>
    <tr><td>360 - 399</td><td>Medium phone</td><td> </td><td>4</td><td>16</td></tr>
    <tr><td>400 - 479</td><td>Large phone</td><td> </td><td>4</td><td>16</td></tr>
    <tr><td>480 - 599</td><td>Large phone</td><td>Small phone</td><td>4</td><td>16</td></tr>
    <tr><td>600 - 719</td><td>Small tablet</td><td>Medium phone</td><td>8</td><td>16</td></tr>
    <tr><td>720 - 839/td><td>Large tablet</td><td>Large phone</td><td>8</td><td>24</td></tr>
    <tr><td>840 - 959</td><td>Large tablet</td><td>Large phone</td><td>12</td><td>24</td></tr>
    <tr><td>960 - 1023</td><td> </td><td>Small tablet</td><td>12</td><td>24</td></tr>
    <tr><td>1024 - 1279</td><td> </td><td>Large tablet</td><td>12</td><td>24</td></tr>
    <tr><td>1280 - 1439</td><td> </td><td>Large tablet</td><td>12</td><td>24</td></tr>
    <tr><td>1440 - 1599</td><td> </td><td> </td><td>12</td><td>24</td></tr>
    <tr><td>1600 - 1919</td><td> </td><td> </td><td>12</td><td>24</td></tr>
    <tr><td>1920 +</td><td> </td><td> </td><td>12</td><td>24</td></tr>
</table>

<p>
    *Margins and gutters are flexible and don’t need to be of equal size.
</p>
